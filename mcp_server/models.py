# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:05:41+00:00

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import BaseModel, Field


class ApiCoreDtoAccountingConversionOptions(BaseModel):
    hideComCost: Optional[bool] = None
    hideCost: Optional[bool] = None
    hideCount: Optional[bool] = None
    hideParams: Optional[bool] = None
    hideValue: Optional[bool] = None
    percentCommission: Optional[int] = None
    percentValue: Optional[int] = None


class ApiCoreDtoAccountingDomainWhitelistEntry(BaseModel):
    id: Optional[str] = None
    name: Optional[str] = None


class ApiCoreDtoAccountingExtendedGrants(BaseModel):
    allowAllGrants: Optional[bool] = None
    allowGroupCreation: Optional[bool] = None


class TimeFormat(Enum):
    AmPm = 'AmPm'
    H24 = 'H24'


class ApiCoreDtoAccountingHitOptions(BaseModel):
    hideReferrer: Optional[bool] = None


class ApiCoreDtoAccountingIpBlacklistEntry(BaseModel):
    id: Optional[str] = None
    ip: Optional[str] = None


class ApiCoreDtoAccountingPlan(BaseModel):
    allowedPersonalDomains: Optional[int] = None
    allowedPersonalUrls: Optional[int] = None
    billingPeriodEnd: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    billingPeriodStart: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    bonusMonthlyEvents: Optional[int] = None
    maximumDatapoints: Optional[int] = None
    maximumGuests: Optional[int] = None
    monthlyEvents: Optional[int] = None
    name: Optional[str] = None
    price: Optional[float] = None
    profileId: Optional[int] = None
    recurring: Optional[bool] = None
    recurringPeriod: Optional[int] = None
    usedDatapoints: Optional[int] = None
    usedMonthlyEvents: Optional[int] = None


class ApiCoreDtoAccountingUser(BaseModel):
    boGoVal: Optional[str] = None
    bonusClicks: Optional[int] = None
    companyName: Optional[str] = None
    companyRole: Optional[str] = None
    email: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    phone: Optional[str] = None
    redirectOnly: Optional[bool] = None
    registrationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    timeframeMinDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    timezone: Optional[int] = None
    timezonename: Optional[str] = None


class ApiCoreDtoClickStreamHitBrowserInfo(BaseModel):
    browserType: Optional[str] = None
    familyId: Optional[int] = None
    familyName: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None


class ApiCoreDtoClickStreamHitConversionInfo(BaseModel):
    accessTime: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    comcost: Optional[float] = None
    cost: Optional[float] = None
    date: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    deleted: Optional[bool] = None
    id: Optional[int] = None
    name: Optional[str] = None
    parameter: Optional[str] = None
    value: Optional[float] = None


class Status(Enum):
    Active = 'Active'
    Paused = 'Paused'
    Abuse = 'Abuse'
    Deleted = 'Deleted'


class ApiCoreDtoClickStreamHitLocationInfo(BaseModel):
    areacode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    metrocode: Optional[str] = None
    organization: Optional[str] = None
    postalcode: Optional[str] = None
    region: Optional[str] = None
    regionName: Optional[str] = None


class ApiCoreDtoClickStreamHitOsInfo(BaseModel):
    familyId: Optional[int] = None
    familyName: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None


class ApiCoreDtoClickStreamHitSource(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    param: Optional[str] = None


class Protocol(Enum):
    Http = 'Http'
    Https = 'Https'


class ApiCoreDtoConversionsConversion(BaseModel):
    code: Optional[str] = None
    creationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    deleted: Optional[bool] = None
    description: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    protocol: Optional[Protocol] = None
    value: Optional[float] = None


class ApiCoreDtoDatapointsBrowserBaseDestinationItem(BaseModel):
    emailDestinationUrl: Optional[str] = None
    mobileDestinationUrl: Optional[str] = None
    spidersDestinationUrl: Optional[str] = None


class Type(Enum):
    TrackingLink = 'TrackingLink'
    TrackingPixel = 'TrackingPixel'


class ApiCoreDtoDatapointsDatapointRetargetingInfo(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None


class ApiCoreDtoDatapointsMultipleDestinationItem(BaseModel):
    url: Optional[str] = None


class DestinationMode(Enum):
    Simple = 'Simple'
    RandomDestination = 'RandomDestination'
    DestinationByLanguage = 'DestinationByLanguage'
    SpilloverDestination = 'SpilloverDestination'
    DynamicUrl = 'DynamicUrl'
    BrowserDestination = 'BrowserDestination'
    DestinationByNation = 'DestinationByNation'
    UniqueDestination = 'UniqueDestination'
    SequentialDestination = 'SequentialDestination'
    WeightedDestination = 'WeightedDestination'


class RedirectType(Enum):
    PermanentRedirect = 'PermanentRedirect'
    TemporaryRedirect = 'TemporaryRedirect'


class ReferrerClean(Enum):
    None_ = 'None'
    Clean = 'Clean'
    Myself = 'Myself'


class ApiCoreDtoDatapointsTrackingPixelSpecifics(BaseModel):
    parameterNote: Optional[str] = None


class ApiCoreDtoDatapointsUniqueDestinationItem(BaseModel):
    firstDestinationUrl: Optional[str] = None


class ApiCoreDtoDatapointsUrlByLanguageItem(BaseModel):
    languageCode: Optional[str] = None
    url: Optional[str] = None


class ApiCoreDtoDatapointsUrlByNationItem(BaseModel):
    nation: Optional[str] = None
    url: Optional[str] = None


class ApiCoreDtoDatapointsWeightedDestinationItem(BaseModel):
    url: Optional[str] = None
    weight: Optional[int] = None


class Type1(Enum):
    System = 'System'
    Go = 'Go'
    Dedicated = 'Dedicated'
    Personal = 'Personal'


class ApiCoreDtoDomainsDomain(BaseModel):
    custom404: Optional[str] = None
    customHomepage: Optional[str] = None
    id: Optional[int] = None
    name: Optional[str] = None
    type: Optional[Type1] = None


class ApiCoreDtoEntityUriLong(BaseModel):
    id: Optional[int] = None
    uri: Optional[str] = None


class ApiCoreDtoRetargetingRetargetingScript(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    script: Optional[str] = None


class ApiCoreDtoTagsTag(BaseModel):
    datapoints: Optional[List[int]] = None
    groups: Optional[List[int]] = None
    id: Optional[int] = None
    name: Optional[str] = None


class ApiCoreRequestsConversionPatchBody(BaseModel):
    Action: Optional[str] = None
    Id: Optional[int] = None
    ReplaceId: Optional[int] = None


class ApiCoreRequestsDeleteBatch(BaseModel):
    Entities: Optional[List[ApiCoreDtoEntityUriLong]] = None


class ApiCoreRequestsGenericTextPatch(BaseModel):
    Text: Optional[str] = None


class ApiCoreRequestsPatchBody(BaseModel):
    Action: Optional[str] = None
    Id: Optional[int] = None


class ApiCoreRequestsPatchBodyBatch(BaseModel):
    PatchRequests: Optional[List[ApiCoreRequestsPatchBody]] = None


class ApiCoreRequestsPermissionPatchRequest(BaseModel):
    Action: Optional[str] = None
    Id: Optional[int] = None
    Verb: Optional[str] = None


class ApiCoreResponsesCountResponce(BaseModel):
    count: Optional[int] = None


class ApiCoreResponsesEntitiesResponseApiCoreDtoAccountingDomainWhitelistEntry(
    BaseModel
):
    entities: Optional[List[ApiCoreDtoAccountingDomainWhitelistEntry]] = None


class ApiCoreResponsesEntitiesResponseApiCoreDtoAccountingIpBlacklistEntry(BaseModel):
    entities: Optional[List[ApiCoreDtoAccountingIpBlacklistEntry]] = None


class ApiCoreResponsesEntityUriSystemInt64(BaseModel):
    id: Optional[int] = None
    uri: Optional[str] = None


class SystemObject(BaseModel):
    pass


class SortDirection(Enum):
    asc = 'asc'
    desc = 'desc'


class EntityType(Enum):
    datapoint = 'datapoint'
    group = 'group'


class Type2(Enum):
    r = 'r'
    w = 'w'


class Type6(Enum):
    datapoint = 'datapoint'
    group = 'group'


class TimeFrame(Enum):
    today = 'today'
    yesterday = 'yesterday'
    last7 = 'last7'
    last30 = 'last30'
    lastmonth = 'lastmonth'
    currentmonth = 'currentmonth'
    previousmonth = 'previousmonth'
    last90 = 'last90'
    last120 = 'last120'
    last180 = 'last180'
    last12months = 'last12months'
    lastyear = 'lastyear'
    currentyear = 'currentyear'
    beginning = 'beginning'
    custom = 'custom'


class GroupBy(Enum):
    week = 'week'
    month = 'month'


class Status2(Enum):
    deleted = 'deleted'
    active = 'active'


class Type8(Enum):
    tp = 'tp'
    tl = 'tl'


class Status4(Enum):
    deleted = 'deleted'
    active = 'active'
    paused = 'paused'
    spam = 'spam'


class Status6(Enum):
    deleted = 'deleted'
    active = 'active'


class Filter(Enum):
    field_ = ''
    spiders = 'spiders'
    uniques = 'uniques'
    nonuniques = 'nonuniques'
    conversions = 'conversions'


class Status14(Enum):
    deleted = 'deleted'
    active = 'active'
    paused = 'paused'
    spam = 'spam'


class Timeframe(Enum):
    yesterday = 'yesterday'
    last7 = 'last7'
    last30 = 'last30'
    lastmonth = 'lastmonth'
    currentmonth = 'currentmonth'
    previousmonth = 'previousmonth'
    last90 = 'last90'
    last120 = 'last120'
    last180 = 'last180'
    custom = 'custom'


class Filter2(Enum):
    spiders = 'spiders'
    uniques = 'uniques'
    nonuniques = 'nonuniques'
    conversions = 'conversions'


class Type20(Enum):
    system = 'system'
    go = 'go'
    personal = 'personal'
    dedicated = 'dedicated'


class Status24(Enum):
    deleted = 'deleted'
    active = 'active'


class GroupBy10(Enum):
    deleted = 'deleted'
    active = 'active'


class GroupBy12(Enum):
    week = 'week'
    month = 'month'


class Type24(Enum):
    tp = 'tp'
    tl = 'tl'


class Status32(Enum):
    deleted = 'deleted'
    active = 'active'
    paused = 'paused'
    spam = 'spam'


class Type30(Enum):
    tp = 'tp'
    tl = 'tl'
    dp = 'dp'
    gr = 'gr'


class Type34(Enum):
    tp = 'tp'
    tl = 'tl'


class Status44(Enum):
    deleted = 'deleted'
    active = 'active'


class ApiCoreDtoAggregatedAggregatedResult(BaseModel):
    activityDay: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    commissionsCost: Optional[float] = None
    conversionsCost: Optional[float] = None
    conversionsValue: Optional[float] = None
    convertedClicks: Optional[int] = None
    entityData: Optional[SystemObject] = None
    entityId: Optional[str] = None
    fromDay: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    hourlyBreakDown: Optional[Dict[str, ApiCoreDtoAggregatedAggregatedResult]] = None
    lastHitDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    spiderHitsCount: Optional[int] = None
    toDay: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    totalClicks: Optional[int] = None
    totalViews: Optional[int] = None
    uniqueClicks: Optional[int] = None
    uniqueConversions: Optional[int] = None
    uniqueViews: Optional[int] = None


class ApiCoreDtoAggregatedAggregatedSummaryResult(BaseModel):
    count: Optional[int] = None
    limit: Optional[int] = None
    offset: Optional[int] = None
    result: Optional[List[ApiCoreDtoAggregatedAggregatedResult]] = None


class ApiCoreDtoClickStreamHitDatapointInfo(BaseModel):
    creationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    datapointFavourite: Optional[bool] = None
    datapointId: Optional[int] = None
    datapointName: Optional[str] = None
    datapointTitle: Optional[str] = None
    datapointType: Optional[str] = None
    destinationUrl: Optional[str] = None
    groupId: Optional[int] = None
    groupName: Optional[str] = None
    isABTest: Optional[bool] = None
    isPrivateShared: Optional[bool] = None
    isPublic: Optional[bool] = None
    notes: Optional[str] = None
    status: Optional[Status] = None
    tags: Optional[List[ApiCoreDtoTagsTag]] = None
    trackingCode: Optional[str] = None


class ApiCoreDtoDatapointsTrackingLinkSpecifics(BaseModel):
    appendQuery: Optional[bool] = None
    browserDestinationItem: Optional[ApiCoreDtoDatapointsBrowserBaseDestinationItem] = (
        None
    )
    destinationMode: Optional[DestinationMode] = None
    domainId: Optional[int] = None
    encodeUrl: Optional[bool] = None
    expirationClicks: Optional[int] = None
    expirationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    firstUrl: Optional[str] = None
    goDomainId: Optional[int] = None
    hideUrl: Optional[bool] = None
    hideUrlTitle: Optional[str] = None
    isABTest: Optional[bool] = None
    password: Optional[str] = None
    pauseAfterClicksExpiration: Optional[bool] = None
    pauseAfterDateExpiration: Optional[bool] = None
    randomDestinationItems: Optional[
        List[ApiCoreDtoDatapointsMultipleDestinationItem]
    ] = None
    redirectType: Optional[RedirectType] = None
    referrerClean: Optional[ReferrerClean] = None
    scripts: Optional[List[ApiCoreDtoDatapointsDatapointRetargetingInfo]] = None
    sequentialDestinationItems: Optional[
        List[ApiCoreDtoDatapointsMultipleDestinationItem]
    ] = None
    spilloverDestinationItems: Optional[
        List[ApiCoreDtoDatapointsMultipleDestinationItem]
    ] = None
    uniqueDestinationItem: Optional[ApiCoreDtoDatapointsUniqueDestinationItem] = None
    url: Optional[str] = None
    urlAfterClicksExpiration: Optional[str] = None
    urlAfterDateExpiration: Optional[str] = None
    urlsByLanguage: Optional[List[ApiCoreDtoDatapointsUrlByLanguageItem]] = None
    urlsByNation: Optional[List[ApiCoreDtoDatapointsUrlByNationItem]] = None
    weightedDestinationItems: Optional[
        List[ApiCoreDtoDatapointsWeightedDestinationItem]
    ] = None


class ApiCoreDtoGrantsGrant(BaseModel):
    DatapointType: Optional[str] = None
    Entity: Optional[ApiCoreResponsesEntityUriSystemInt64] = None
    EntityName: Optional[str] = None
    EntityType: Optional[str] = None
    Type: Optional[str] = None


class ApiCoreDtoGroupsGroup(BaseModel):
    creationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    deleted: Optional[bool] = None
    id: Optional[int] = None
    isPublic: Optional[bool] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    preferred: Optional[bool] = None
    redirectOnly: Optional[bool] = None
    tags: Optional[List[ApiCoreDtoTagsTag]] = None
    writePermited: Optional[bool] = None


class ApiCoreDtoTopsTopItem(BaseModel):
    entityData: Optional[SystemObject] = None
    id: Optional[str] = None
    lastHitDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    spiderClicks: Optional[int] = None
    spiderHits: Optional[int] = None
    spiderViews: Optional[int] = None
    totalClicks: Optional[int] = None
    totalCommissionsCost: Optional[float] = None
    totalConversions: Optional[int] = None
    totalConversionsCost: Optional[float] = None
    totalConversionsValue: Optional[float] = None
    totalHits: Optional[int] = None
    totalViews: Optional[int] = None
    uniqueClicks: Optional[int] = None
    uniqueHits: Optional[int] = None
    uniqueViews: Optional[int] = None


class ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult(BaseModel):
    entities: Optional[List[ApiCoreDtoAggregatedAggregatedResult]] = None


class ApiCoreResponsesEntitiesResponseApiCoreDtoGrantsGrant(BaseModel):
    entities: Optional[List[ApiCoreDtoGrantsGrant]] = None


class ApiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64(BaseModel):
    entities: Optional[List[ApiCoreResponsesEntityUriSystemInt64]] = None


class ClickMeterInfrastructureValidationValidationFailure(BaseModel):
    code: Optional[SystemObject] = None
    errorMessage: Optional[str] = None
    errorValue: Optional[SystemObject] = None
    property: Optional[str] = None


class ApiCoreDtoAccountingGuest(BaseModel):
    apiKey: Optional[str] = None
    conversionOptions: Optional[ApiCoreDtoAccountingConversionOptions] = None
    creationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    currentGrant: Optional[ApiCoreDtoGrantsGrant] = None
    dateFormat: Optional[str] = None
    decimalSeparator: Optional[str] = None
    email: Optional[str] = None
    extendedGrants: Optional[ApiCoreDtoAccountingExtendedGrants] = None
    groupGrants: Optional[int] = None
    hitOptions: Optional[ApiCoreDtoAccountingHitOptions] = None
    id: Optional[int] = None
    key: Optional[str] = None
    language: Optional[str] = None
    loginCount: Optional[int] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    numberGroupSeparator: Optional[str] = None
    password: Optional[str] = None
    timeFormat: Optional[TimeFormat] = None
    timeZone: Optional[int] = None
    timeframeMinDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    timezonename: Optional[str] = None
    tlGrants: Optional[int] = None
    tpGrants: Optional[int] = None
    userName: Optional[str] = None


class ApiCoreDtoClickStreamHit(BaseModel):
    accessTime: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    browser: Optional[ApiCoreDtoClickStreamHitBrowserInfo] = None
    clientLanguage: Optional[str] = None
    conversion1: Optional[ApiCoreDtoClickStreamHitConversionInfo] = None
    conversion2: Optional[ApiCoreDtoClickStreamHitConversionInfo] = None
    conversion3: Optional[ApiCoreDtoClickStreamHitConversionInfo] = None
    conversion4: Optional[ApiCoreDtoClickStreamHitConversionInfo] = None
    conversion5: Optional[ApiCoreDtoClickStreamHitConversionInfo] = None
    conversions: Optional[List[ApiCoreDtoClickStreamHitConversionInfo]] = None
    entity: Optional[ApiCoreDtoClickStreamHitDatapointInfo] = None
    ip: Optional[str] = None
    isProxy: Optional[str] = None
    isSpider: Optional[str] = None
    isUnique: Optional[str] = None
    location: Optional[ApiCoreDtoClickStreamHitLocationInfo] = None
    org: Optional[str] = None
    os: Optional[ApiCoreDtoClickStreamHitOsInfo] = None
    queryParams: Optional[str] = None
    realDestinationUrl: Optional[str] = None
    referer: Optional[str] = None
    source: Optional[ApiCoreDtoClickStreamHitSource] = None
    type: Optional[str] = None


class ApiCoreDtoClickStreamHitListPage(BaseModel):
    hits: Optional[List[ApiCoreDtoClickStreamHit]] = None
    lastKey: Optional[str] = None


class ApiCoreDtoDatapointsDatapoint(BaseModel):
    creationDate: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    encodeIp: Optional[bool] = None
    fifthConversionId: Optional[int] = None
    fifthConversionName: Optional[str] = None
    firstConversionId: Optional[int] = None
    firstConversionName: Optional[str] = None
    fourthConversionId: Optional[int] = None
    fourthConversionName: Optional[str] = None
    groupId: Optional[int] = None
    groupName: Optional[str] = None
    id: Optional[int] = None
    isPublic: Optional[bool] = None
    isSecured: Optional[bool] = None
    lightTracking: Optional[bool] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    preferred: Optional[bool] = None
    redirectOnly: Optional[bool] = None
    secondConversionId: Optional[int] = None
    secondConversionName: Optional[str] = None
    status: Optional[Status] = None
    tags: Optional[List[ApiCoreDtoTagsTag]] = None
    thirdConversionId: Optional[int] = None
    thirdConversionName: Optional[str] = None
    title: Optional[str] = None
    trackingCode: Optional[str] = None
    type: Optional[Type] = None
    typeTL: Optional[ApiCoreDtoDatapointsTrackingLinkSpecifics] = None
    typeTP: Optional[ApiCoreDtoDatapointsTrackingPixelSpecifics] = None
    writePermited: Optional[bool] = None


class ApiCoreDtoTopsTop(BaseModel):
    createdAt: Optional[str] = Field(
        None, description=' (A date in "YmdHis" format)', examples=['20120203120530']
    )
    data: Optional[List[ApiCoreDtoTopsTopItem]] = None
    key: Optional[str] = None


class ApiCoreRequestsDatapointsBatch(BaseModel):
    List: Optional[List[ApiCoreDtoDatapointsDatapoint]] = None


class ApiCoreResponsesEntitiesResponseApiCoreDtoClickStreamHit(BaseModel):
    entities: Optional[List[ApiCoreDtoClickStreamHit]] = None


class ApiCoreResponsesModifyBatchItemResponceApiCoreDtoDatapointsDatapointSystemInt64(
    BaseModel
):
    entityData: Optional[ApiCoreDtoDatapointsDatapoint] = None
    errors: Optional[List[ClickMeterInfrastructureValidationValidationFailure]] = None
    result: Optional[ApiCoreResponsesEntityUriSystemInt64] = None
    status: Optional[str] = None


ApiCoreDtoAggregatedAggregatedResult.model_rebuild()
